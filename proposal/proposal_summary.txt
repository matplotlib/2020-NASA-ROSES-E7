Here we propose full time support for a software developer and partial support
for the Matplotlib project lead.  This will allow us to take
on more complex projects than can be implemented by part-time
volunteer effort alone, while executing critical day-to-day
maintenance tasks required to keep the project healthy.  We propose to
split the effort on this grant equally between the two primary
activities: overhauling our internal data representation with a particular
focus on supporting physical units, and general library maintenance and
community development.

Matplotlib is a comprehensive, community developed, Python library for
creating static, animated, and interactive visualizations, used
throughout SMD community.  Matplotlib is an open-source tool, and has
been developed and maintained for the last 17 years primarily through
volunteer effort.  Like many other open-source tools it has come to be
the tool of choice for hundreds of thousands of users, putting
significant demands on the volunteer community.  In order to support
these users, develop a vibrant community of users and developers, and
plan for future improvements that can meet modern computing
challenges, we are asking for modest support in terms of person hours.


Matplotlib is based on visualizing data stored in Numpy arrays, which
is a simple yet flexible data model that has been the underpinning of
data visualization for the last few decades.  However, modern data
structures are much richer; they can carry additional
meta-data or describe massive data sets, allowing piece-wise
operations on data sets too large to load into memory.  We propose
to refactor Matplotlib's internal data representation to
exploit these developments.


An immediate motivation for this refactor is to improve Matplotlib's
handling of data with physical units attached; currently, it is
largely but inconsistently supported within the library. This refactor will
allow us to consolidate unit handling code and standardize its
behavior across the library.  The importance of handling physical
units in computation is well-recognized in the SPE; core libraries
including NumPy (NEP40-43),
pandas, and xarray are working to add support for physical units to their
foundational data structures.  The proposed work will ensure that
Matplotlib can take advantage of such efforts, for seamless handling
of data with units from computation to visualization.  Additionally,
this refactor will lay the ground work for future enhancements such
as smart resampling, native consumption of structured data, seamless
updating, and alternative data sources such as analytic functions or
database queries.


To sustain Matplotlib and continue to support the hundred of thousands
of users and hundreds of downstream packages will require
continuing maintenance of the library and its community.
This includes tasks like promptly fixing
critical bugs and regressions as they are reported, producing regular
releases, answering user questions, facilitating discussions,
community management, and general project management.  Dedicated
full-time developers help ensure that things happen in a consistent
and timely manner, and provide the crucial roadmaps that will steer
the future of the library


Matplotlib is used throughout the SMD community, including flagship
missions like the Hubble Space Telescope and the James Webb Space
Telescope.  Domain specific libraries, such as AstroPy (astrophyics),
sunpy (heliophysics), and Cartopy (earth science), extend Matplotlib to
provide specialized plotting.  Given the breadth of Matplotlib usage
across the SMD divisions, small investments in Matplotlib will have
returns across the entire SMD portfolio.
